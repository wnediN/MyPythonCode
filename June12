x = 1
while x < 11:
    print(x)
    x += 1

# if we want to skip printing 4, we can use 'continue' statement
k = 0
while k < 10:
    k += 1
    if k == 4:
        continue
    print(k)


# prints all odd numbers 1 to 100
k = 1
while k <= 100:
    print(k)
    k += 2
# or
k = 0
while k < 100:
    k += 1
    if k % 2 == 0:
        continue
    else:
        print(k)


# break statement: when python sees a break statement within a loop,
# it breaks and goes to the next statement outside the loop
i = 1
while i <= 1000000:
    if i > 15:
        break
    i += 1
    print(i)

# 4, 7, 10, ... 301
# except all elements between 20 and 280 are skipped
k = 1
while k < 301:
    k += 3
    if 20 < k < 280:
        continue
    print(k)



# minimizing cost
# f(p) = 2 * (p - 3)^2 + 15
# its derivative is
# f'(p) = 4(p-3)

# set parameters
alfa = 0.1

# start with random price
p = 10

# the next price is p = p - alfa - fprime
# 1st iteration
# fprime = 4 * (p - 3)
# p = p - alfa * fprime
# print(p)

# 2nd iteration
# fprime = 4 * (p - 3)
# p = p - alfa * fprime
# print(p)

# 3rd iteration
# fprime = 4 * (p - 3)
# p = p - alfa * fprime
# print(p)

k = 0
while k < 50:
    fprime = 4 * (p - 3)
    p = p - alfa * fprime
    print(p)
    k += 1

# LISTS
age = [53, 3, 17, 12, 23]

# read the age at index 0, 3, 4, -1, -2
print(age[0])
print(age[3])
print(age[4])
print(age[-1])
print(age[-2])

# we can read a slice from the list
# a:b, index a is included while b is excluded
print(age[1:5])
print(age[-4:-1])
print(age[0:])
print(age[:4])

k = 2
while k < 6:
    print(age[k])
    k += 1

ages = [34, 25, 15, 76, 68, 50, 23]
x = 0
tot = 0
while x < 7:
    tot += ages[x]
    x += 1
print(tot)
print('average:', tot/7)
