# minimizing cost
# f(p) = 2 * (p - 3)^2 + 15
# its derivative is
# f'(p) = 4(p-3)

# set parameters
#alfa = 0.1

# start with random price
#p = 10

# the next price is p = p - alfa - fprime
# 1st iteration
# fprime = 4 * (p - 3)
# p = p - alfa * fprime
# print(p)

# 2nd iteration
# fprime = 4 * (p - 3)
# p = p - alfa * fprime
# print(p)

# 3rd iteration
# fprime = 4 * (p - 3)
# p = p - alfa * fprime
# print(p)

#k = 0
#while k < 200:
#    fprime = 4 * (p - 3)
#    p = p - alfa * fprime
#    print(f'updated price {p}, and slope: {fprime}')
#    k += 1

# notice that the price (fprime) gets smaller and smaller every iteration
# becoming similar to zero. So we can check whether slope is small enough
# to break. meaning that we will be in the while loop as long as the slope
# remains above a small number

# set parameters
alfa = 0.1

# start with a random guess for the price, can also start with 2. negative slope doesn't matter because absolute value
p = 100
fprime = 4 * (p - 3)

while abs(fprime) > 0.000001:
    fprime = 4 * (p - 3)
    p = p - alfa * fprime
    print(f'updated price: {p}, and slope: {fprime}')


# set parameters
alfa = 0.0000001

# start with a random guess for the price
p = 5
fprime = 2 * (p ** 5 - 3) * (5 * p**4)

while abs(fprime) > 0.0001:
    fprime = 2 * (p**5 - 3) * (5 * p**4)
    p = p - alfa * fprime
    print(f'updated price: {p}, and slope: {fprime}')
